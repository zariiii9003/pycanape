name: CI

on:
  pull_request:
  push:
    branches-ignore:
      - 'dependabot/**'

env:
  PY_COLORS: "1"

permissions:
  contents: read

jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [
          "3.9",
          "3.10",
          "3.11",
          "3.12",
          "3.13",
          "3.14",
        ]
      fail-fast: false
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # 5.0.0
      with:
        persist-credentials: false
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # 6.0.0
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest python-can==4.*
        python -m pip install .
    - name: Test
      run: |
        python -m pytest

  mypy:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # 5.0.0
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # 6.0.0
      with:
        python-version: "3.13"

    - name: Install dependencies
      run: |
        python -m pip install -e .[dev]

    - name: mypy 3.9
      run: |
        mypy --python-version 3.9 .
    - name: mypy 3.10
      run: |
        mypy --python-version 3.10 .
    - name: mypy 3.11
      run: |
        mypy --python-version 3.11 .
    - name: mypy 3.12
      run: |
        mypy --python-version 3.12 .
    - name: mypy 3.13
      run: |
        mypy --python-version 3.13 .

  linter:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # 5.0.0
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # 6.0.0
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install -e .[dev]
    - name: Run ruff
      run: |
        ruff check src

  format:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # 5.0.0
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # 6.0.0
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install -e .[dev]
    - name: Code Format Check with Ruff
      run: |
        ruff format --check .

  build:
    name: Build artifacts
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # 5.0.0
      with:
        persist-credentials: false

    - name: Build wheel and sdist
      run: pipx run build

    - name: Check artifacts
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # 4.6.2
      with:
        name: artifact
        path: dist/*

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # 5.0.0
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # 6.0.0
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[doc]
    - name: Build documentation
      run: |
        python -m sphinx -TWan --keep-going docs build

  upload_pypi:
    name: Create release
    needs: [ mypy, linter, build, docs, format ]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyCANape
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write  # for action-gh-release
      attestations: write  # for attest-build-provenance

    # create a new release for tagged commits
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # 5.0.0
      with:
        name: artifact
        path: dist

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a  # 3.0.0
      with:
        subject-path: 'dist/*'

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e  # 1.13.0

    - name: Release
      uses: softprops/action-gh-release@62c96d0c4e8a889135c1f3a25910db8dbe0e85f7  # 2.3.4
      with:
        files: dist/*
